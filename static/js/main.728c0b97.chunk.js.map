{"version":3,"sources":["TabPanel.jsx","profile.jpg","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","index","value","other","role","id","aria-labelledby","style","marginBottom","Box","p","Typography","htmlProps","useStyles","makeStyles","theme","root","tabs","borderRight","palette","divider","position","height","width","left","top","float","backgroundColor","color","tab","maxWidth","tabPanels","img","borderRadius","margin","border","VerticalTabs","classes","useState","setValue","handleClickTab","i","document","getElementById","scrollIntoView","behavior","block","className","Grid","container","spacing","item","xs","Tabs","orientation","indicatorColor","onChange","event","newValue","aria-label","src","profile","alt","Tab","label","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.728c0b97.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n      style={{ marginBottom: \"500px\" }}\n    >\n      <Box p={3}>\n        <Typography>{children}</Typography>\n      </Box>\n    </div>\n  );\n};\n\nexport default TabPanel;\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/profile.b7f19880.jpg\";","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TabPanel from \"./TabPanel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport profile from \"./profile.jpg\";\n\nfunction htmlProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    position: \"fixed\",\n    height: \"100%\",\n    width: \"25vw\",\n    left: 0,\n    top: 0,\n    float: \"left\",\n    backgroundColor: \"#5f6d7e\",\n    color: \"white\",\n  },\n  tab: {\n    maxWidth: \"25vw\",\n  },\n  tabPanels: {},\n  img: {\n    width: \"15vw\",\n    borderRadius: \"25%\",\n    margin: \"auto\",\n    border: \"4px solid white\",\n  },\n}));\n\nconst VerticalTabs = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClickTab = (i) => {\n    const ele = document.getElementById(`vertical-tabpanel-${i}`);\n    ele.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Tabs\n            orientation=\"vertical\"\n            indicatorColor=\"primary\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs example\"\n            className={classes.tabs}\n          >\n            <img src={profile} alt=\"Avatar\" className={classes.img} />\n            <Tab\n              label=\"Item One\"\n              className={classes.tab}\n              {...htmlProps(0)}\n              onClick={() => handleClickTab(0)}\n            />\n            <Tab\n              label=\"Item Two\"\n              className={classes.tab}\n              {...htmlProps(1)}\n              onClick={() => handleClickTab(1)}\n            />\n            <Tab\n              label=\"Item Three\"\n              className={classes.tab}\n              {...htmlProps(2)}\n              onClick={() => handleClickTab(2)}\n            />\n            <Tab\n              label=\"Item Four\"\n              className={classes.tab}\n              {...htmlProps(3)}\n              onClick={() => handleClickTab(3)}\n            />\n            <Tab\n              label=\"Item Five\"\n              className={classes.tab}\n              {...htmlProps(4)}\n              onClick={() => handleClickTab(4)}\n            />\n          </Tabs>\n        </Grid>\n        <Grid item xs={9}>\n          <TabPanel value={value} index={0}>\n            Item One\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            Item Two\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            Item Three\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            Item Four\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            Item Five\n          </TabPanel>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default VerticalTabs;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}